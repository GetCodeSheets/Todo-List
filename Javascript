<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo List</title>
    <style>
        body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
}

.container {
    max-width: 600px;
    margin: 20px auto;
    background-color: #fff;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

h1 {
    text-align: center;
    margin-bottom: 20px;
}

input[type="text"] {
    width: 70%;
    padding: 10px;
    margin-bottom: 10px;
}

button {
    padding: 10px 20px;
    background-color: #4caf50;
    color: #fff;
    border: none;
    border-radius: 3px;
    cursor: pointer;
}

button:hover {
    background-color: #45a049;
}

ul {
    list-style-type: none;
    padding: 0;
}

li {
    padding: 10px;
    border-bottom: 1px solid #ddd;
}

.filter-buttons {
    margin-top: 20px;
    text-align: center;
}

.filter-buttons button {
    margin-right: 5px;
}

    </style>
</head>

<body>
    <div class="container">
        <h1>Todo List</h1>
        <input type="text" id="taskInput" placeholder="Add a new task">
        <button onclick="addTask()">Add Task</button>
        <ul id="taskList"></ul>
        <div class="filter-buttons">
            <button onclick="filterTasks('all')">All</button>
            <button onclick="filterTasks('active')">Active</button>
            <button onclick="filterTasks('completed')">Completed</button>
            <button onclick="clearCompleted()">Clear Completed</button>
        </div>
    </div>

    <script>
        // Retrieve task list from local storage if available
            let tasks = JSON.parse(localStorage.getItem('tasks')) || [];

            // Function to render tasks
            function renderTasks() {
                const taskList = document.getElementById('taskList');
                taskList.innerHTML = '';

                tasks.forEach((task, index) => {
                    const li = document.createElement('li');
                    li.innerHTML = `
            <span>${task.text}</span>
            <button onclick="completeTask(${index})">Complete</button>
            <button onclick="editTask(${index})">Edit</button>
            <button onclick="deleteTask(${index})">Delete</button>
        `;
                    if (task.completed) {
                        li.classList.add('completed');
                    }
                    taskList.appendChild(li);
                });

                // Update local storage
                localStorage.setItem('tasks', JSON.stringify(tasks));
            }

            // Function to add a new task
            function addTask() {
                const taskInput = document.getElementById('taskInput');
                const text = taskInput.value.trim();
                if (text !== '') {
                    tasks.push({ text, completed: false });
                    renderTasks();
                    taskInput.value = '';
                }
            }

            // Function to complete a task
            function completeTask(index) {
                tasks[index].completed = !tasks[index].completed;
                renderTasks();
            }

            // Function to edit a task
            function editTask(index) {
                const newText = prompt('Enter new task text:');
                if (newText !== null) {
                    tasks[index].text = newText.trim();
                    renderTasks();
                }
            }

            // Function to delete a task
            function deleteTask(index) {
                if (confirm('Are you sure you want to delete this task?')) {
                    tasks.splice(index, 1);
                    renderTasks();
                }
            }

            // Function to filter tasks
            function filterTasks(status) {
                const filteredTasks = tasks.filter(task => {
                    if (status === 'active') {
                        return !task.completed;
                    } else if (status === 'completed') {
                        return task.completed;
                    } else {
                        return true;
                    }
                });
                tasks = filteredTasks;
                renderTasks();
            }

            // Function to clear completed tasks
            function clearCompleted() {
                tasks = tasks.filter(task => !task.completed);
                renderTasks();
            }

            // Initial rendering of tasks
            renderTasks();

    </script>
</body>

</html>
